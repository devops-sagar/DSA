nums = [12, 16, 20, 20, 12, 30, 25, 23, 24, 20]

'''
Below Code is generated by github copilot
'''
# # Mean
# mean = sum(nums) / len(nums)
# print("Mean: ", mean)

# # Median
# nums.sort()
# if len(nums) % 2 == 0:
#     median = (nums[len(nums)//2] + nums[len(nums)//2 - 1]) / 2
# else:
#     median = nums[len(nums)//2]
# print("Median: ", median)

# # Mode
# mode = max(set(nums), key=nums.count)
# print("Mode: ", mode)
'''
Above code is generated by the github copilot
'''

# Mean
mean = sum(nums) / len(nums)
print(f"Mean will be {mean}")

# Median
nums.sort()
if len(nums) % 2 == 0:
    f1 = nums[len(nums) // 2]
    f2 = nums[(len(nums) // 2) - 1]     # or else: median = (nums[len(nums)//2] + nums[len(nums)//2 - 1]) / 2
    median = (f1 + f2) / 2
else:
    median = nums[len(nums) // 2]
print(f"Median will be {median}")

# Mode
counter = {}
for i in nums:
    counter.setdefault(i, 0)
    counter[i] += 1

count = max(counter.values())

for i, j in counter.items():
    if j == count:
        mode = i
print(f"Mode will be {mode}")